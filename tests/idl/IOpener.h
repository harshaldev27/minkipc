// Copyright (c) 2025, Qualcomm Innovation Center, Inc. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause

/** @cond */
#pragma once
// AUTOGENERATED FILE: DO NOT EDIT

#include <stdint.h>
#include "object.h"

/** 0 is not a valid service ID. */
#define IOpener_INVALID_ID UINT32_C(0)

#define IOpener_ERROR_NOT_FOUND INT32_C(10)
#define IOpener_ERROR_PRIVILEGE INT32_C(11)
#define IOpener_ERROR_NOT_SUPPORTED INT32_C(12)

#define IOpener_OP_open 0

static inline int32_t
IOpener_release(Object self)
{
    return Object_invoke(self, Object_OP_release, 0, 0);
}

static inline int32_t
IOpener_retain(Object self)
{
    return Object_invoke(self, Object_OP_retain, 0, 0);
}

/*
*
*   Gets a service object from the system.
*
*   @param[in]  id   Identifies a class of service object.
*   @param[out] obj  Requested service instance.
*
*   @return
*   Object_OK if successful. \n
*   ERROR_NOT_FOUND if a service matching the ID cannot be found. \n
*   ERROR_PRIVILEGE if required privileges are not present.
*
*/
static inline int32_t IOpener_open(Object self, uint32_t id_val, Object *obj)
{
    ObjectArg a[] = {
        {.b = (ObjectBuf) { &id_val, sizeof(uint32_t) } },
        {.o = Object_NULL },
    };

    int32_t result = Object_invoke(self, IOpener_OP_open, a, ObjectCounts_pack(1, 0, 0, 1));
    *obj = a[1].o;

    return result;
}
